Grammar

    0 $accept: START $end

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    2 PRIMITIVE: ID '=' EXPR NEWLINE PRIMITIVE
    3          | ε

    4 ENGINE: '[' PLAY ']'
    5       | '[' PLAY WITH PARAM PARAMLIST ']'
    6       | ε

    7 FUNCTIONS: FUNCTION NEWLINE FUNCTIONS
    8          | ε

    9 FUNCTION: '{' ID BODY '}'

   10 BODY: STATEMENT BODY
   11     | STATEMENT

   12 STATEMENT: IFSTATEMENT
   13          | WHILELOOP
   14          | ID '=' EXPR

   15 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT END
   16            | IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END

   17 WHILELOOP: WHILE '(' EXPR ')' STATEMENT END

   18 EXPR: ARITHLOGIC
   19     | '[' CALL ID ']'
   20     | '[' CALL ID WITH PARAM PARAMLIST ']'

   21 ARITHLOGIC: TERM ARITH1

   22 TERM: FACTOR TERM1

   23 ARITH1: '+' TERM ARITH1
   24       | '-' TERM ARITH1
   25       | OR TERM ARITH1
   26       | ε

   27 FACTOR: ID
   28       | STRING
   29       | TUPLE
   30       | NUM
   31       | '(' EXPR ')'
   32       | '(' NEG EXPR ')'
   33       | '(' NOT EXPR ')'

   34 TERM1: '*' FACTOR TERM1
   35      | AND FACTOR TERM1
   36      | ε

   37 PARAM: ID '=' EXPR

   38 PARAMLIST: PARAM PARAMLIST
   39          | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 15 16 17 31 32 33
    ')' (41) 15 16 17 31 32 33
    '*' (42) 34
    '+' (43) 23
    '-' (45) 24
    '=' (61) 2 14 37
    '[' (91) 4 5 19 20
    ']' (93) 4 5 19 20
    '{' (123) 9
    '}' (125) 9
    error (256)
    ID <symbol> (258) 2 9 14 19 20 27 37
    NUM <symbol> (259) 30
    STRING <symbol> (260) 28
    TUPLE <symbol> (261) 29
    SECTION1 (262) 1
    SECTION2 (263) 1
    SECTION3 (264) 1
    NEWLINE (265) 1 2 7
    IF (266) 15 16
    THEN (267) 15 16
    ELSE (268) 16
    END (269) 15 16 17
    WHILE (270) 17
    CALL (271) 19 20
    WITH (272) 5 20
    OR (273) 25
    AND (274) 35
    NOT (275) 33
    NEG (276) 32
    PLAY (277) 4 5


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    START <id> (34)
        on left: 1
        on right: 0
    PRIMITIVE <id> (35)
        on left: 2 3
        on right: 1 2
    ENGINE <id> (36)
        on left: 4 5 6
        on right: 1
    FUNCTIONS <id> (37)
        on left: 7 8
        on right: 1 7
    FUNCTION <id> (38)
        on left: 9
        on right: 7
    BODY <id> (39)
        on left: 10 11
        on right: 9 10
    STATEMENT <id> (40)
        on left: 12 13 14
        on right: 10 11 15 16 17
    IFSTATEMENT <id> (41)
        on left: 15 16
        on right: 12
    WHILELOOP <id> (42)
        on left: 17
        on right: 13
    EXPR <id> (43)
        on left: 18 19 20
        on right: 2 14 15 16 17 31 32 33 37
    ARITHLOGIC <id> (44)
        on left: 21
        on right: 18
    TERM <id> (45)
        on left: 22
        on right: 21 23 24 25
    ARITH1 <id> (46)
        on left: 23 24 25 26
        on right: 21 23 24 25
    FACTOR <id> (47)
        on left: 27 28 29 30 31 32 33
        on right: 22 34 35
    TERM1 <id> (48)
        on left: 34 35 36
        on right: 22 34 35
    PARAM <id> (49)
        on left: 37
        on right: 5 20 38
    PARAMLIST <id> (50)
        on left: 38 39
        on right: 5 20 38


State 0

    0 $accept: • START $end
    1 START: • SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    SECTION1  shift, and go to state 1

    START  go to state 2


State 1

    1 START: SECTION1 • NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    NEWLINE  shift, and go to state 3


State 2

    0 $accept: START • $end

    $end  shift, and go to state 4


State 3

    1 START: SECTION1 NEWLINE • PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE
    2 PRIMITIVE: • ID '=' EXPR NEWLINE PRIMITIVE
    3          | ε •  [SECTION2]

    ID  shift, and go to state 5

    $default  reduce using rule 3 (PRIMITIVE)

    PRIMITIVE  go to state 6


State 4

    0 $accept: START $end •

    $default  accept


State 5

    2 PRIMITIVE: ID • '=' EXPR NEWLINE PRIMITIVE

    '='  shift, and go to state 7


State 6

    1 START: SECTION1 NEWLINE PRIMITIVE • SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    SECTION2  shift, and go to state 8


State 7

    2 PRIMITIVE: ID '=' • EXPR NEWLINE PRIMITIVE
   18 EXPR: • ARITHLOGIC
   19     | • '[' CALL ID ']'
   20     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: • TERM ARITH1
   22 TERM: • FACTOR TERM1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '['     shift, and go to state 13
    '('     shift, and go to state 14

    EXPR        go to state 15
    ARITHLOGIC  go to state 16
    TERM        go to state 17
    FACTOR      go to state 18


State 8

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 • NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    NEWLINE  shift, and go to state 19


State 9

   27 FACTOR: ID •

    $default  reduce using rule 27 (FACTOR)


State 10

   30 FACTOR: NUM •

    $default  reduce using rule 30 (FACTOR)


State 11

   28 FACTOR: STRING •

    $default  reduce using rule 28 (FACTOR)


State 12

   29 FACTOR: TUPLE •

    $default  reduce using rule 29 (FACTOR)


State 13

   19 EXPR: '[' • CALL ID ']'
   20     | '[' • CALL ID WITH PARAM PARAMLIST ']'

    CALL  shift, and go to state 20


State 14

   18 EXPR: • ARITHLOGIC
   19     | • '[' CALL ID ']'
   20     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: • TERM ARITH1
   22 TERM: • FACTOR TERM1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   31       | '(' • EXPR ')'
   32       | • '(' NEG EXPR ')'
   32       | '(' • NEG EXPR ')'
   33       | • '(' NOT EXPR ')'
   33       | '(' • NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    NOT     shift, and go to state 21
    NEG     shift, and go to state 22
    '['     shift, and go to state 13
    '('     shift, and go to state 14

    EXPR        go to state 23
    ARITHLOGIC  go to state 16
    TERM        go to state 17
    FACTOR      go to state 18


State 15

    2 PRIMITIVE: ID '=' EXPR • NEWLINE PRIMITIVE

    NEWLINE  shift, and go to state 24


State 16

   18 EXPR: ARITHLOGIC •

    $default  reduce using rule 18 (EXPR)


State 17

   21 ARITHLOGIC: TERM • ARITH1
   23 ARITH1: • '+' TERM ARITH1
   24       | • '-' TERM ARITH1
   25       | • OR TERM ARITH1
   26       | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, ']', '}', ')']

    OR   shift, and go to state 25
    '+'  shift, and go to state 26
    '-'  shift, and go to state 27

    $default  reduce using rule 26 (ARITH1)

    ARITH1  go to state 28


State 18

   22 TERM: FACTOR • TERM1
   34 TERM1: • '*' FACTOR TERM1
   35      | • AND FACTOR TERM1
   36      | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, OR, ']', '}', ')', '+', '-']

    AND  shift, and go to state 29
    '*'  shift, and go to state 30

    $default  reduce using rule 36 (TERM1)

    TERM1  go to state 31


State 19

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE • FUNCTIONS SECTION3 NEWLINE ENGINE
    7 FUNCTIONS: • FUNCTION NEWLINE FUNCTIONS
    8          | ε •  [SECTION3]
    9 FUNCTION: • '{' ID BODY '}'

    '{'  shift, and go to state 32

    $default  reduce using rule 8 (FUNCTIONS)

    FUNCTIONS  go to state 33
    FUNCTION   go to state 34


State 20

   19 EXPR: '[' CALL • ID ']'
   20     | '[' CALL • ID WITH PARAM PARAMLIST ']'

    ID  shift, and go to state 35


State 21

   18 EXPR: • ARITHLOGIC
   19     | • '[' CALL ID ']'
   20     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: • TERM ARITH1
   22 TERM: • FACTOR TERM1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'
   33       | '(' NOT • EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '['     shift, and go to state 13
    '('     shift, and go to state 14

    EXPR        go to state 36
    ARITHLOGIC  go to state 16
    TERM        go to state 17
    FACTOR      go to state 18


State 22

   18 EXPR: • ARITHLOGIC
   19     | • '[' CALL ID ']'
   20     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: • TERM ARITH1
   22 TERM: • FACTOR TERM1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   32       | '(' NEG • EXPR ')'
   33       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '['     shift, and go to state 13
    '('     shift, and go to state 14

    EXPR        go to state 37
    ARITHLOGIC  go to state 16
    TERM        go to state 17
    FACTOR      go to state 18


State 23

   31 FACTOR: '(' EXPR • ')'

    ')'  shift, and go to state 38


State 24

    2 PRIMITIVE: • ID '=' EXPR NEWLINE PRIMITIVE
    2          | ID '=' EXPR NEWLINE • PRIMITIVE
    3          | ε •  [SECTION2]

    ID  shift, and go to state 5

    $default  reduce using rule 3 (PRIMITIVE)

    PRIMITIVE  go to state 39


State 25

   22 TERM: • FACTOR TERM1
   25 ARITH1: OR • TERM ARITH1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '('     shift, and go to state 14

    TERM    go to state 40
    FACTOR  go to state 18


State 26

   22 TERM: • FACTOR TERM1
   23 ARITH1: '+' • TERM ARITH1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '('     shift, and go to state 14

    TERM    go to state 41
    FACTOR  go to state 18


State 27

   22 TERM: • FACTOR TERM1
   24 ARITH1: '-' • TERM ARITH1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '('     shift, and go to state 14

    TERM    go to state 42
    FACTOR  go to state 18


State 28

   21 ARITHLOGIC: TERM ARITH1 •

    $default  reduce using rule 21 (ARITHLOGIC)


State 29

   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'
   35 TERM1: AND • FACTOR TERM1

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '('     shift, and go to state 14

    FACTOR  go to state 43


State 30

   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'
   34 TERM1: '*' • FACTOR TERM1

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '('     shift, and go to state 14

    FACTOR  go to state 44


State 31

   22 TERM: FACTOR TERM1 •

    $default  reduce using rule 22 (TERM)


State 32

    9 FUNCTION: '{' • ID BODY '}'

    ID  shift, and go to state 45


State 33

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS • SECTION3 NEWLINE ENGINE

    SECTION3  shift, and go to state 46


State 34

    7 FUNCTIONS: FUNCTION • NEWLINE FUNCTIONS

    NEWLINE  shift, and go to state 47


State 35

   19 EXPR: '[' CALL ID • ']'
   20     | '[' CALL ID • WITH PARAM PARAMLIST ']'

    WITH  shift, and go to state 48
    ']'   shift, and go to state 49


State 36

   33 FACTOR: '(' NOT EXPR • ')'

    ')'  shift, and go to state 50


State 37

   32 FACTOR: '(' NEG EXPR • ')'

    ')'  shift, and go to state 51


State 38

   31 FACTOR: '(' EXPR ')' •

    $default  reduce using rule 31 (FACTOR)


State 39

    2 PRIMITIVE: ID '=' EXPR NEWLINE PRIMITIVE •

    $default  reduce using rule 2 (PRIMITIVE)


State 40

   23 ARITH1: • '+' TERM ARITH1
   24       | • '-' TERM ARITH1
   25       | • OR TERM ARITH1
   25       | OR TERM • ARITH1
   26       | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, ']', '}', ')']

    OR   shift, and go to state 25
    '+'  shift, and go to state 26
    '-'  shift, and go to state 27

    $default  reduce using rule 26 (ARITH1)

    ARITH1  go to state 52


State 41

   23 ARITH1: • '+' TERM ARITH1
   23       | '+' TERM • ARITH1
   24       | • '-' TERM ARITH1
   25       | • OR TERM ARITH1
   26       | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, ']', '}', ')']

    OR   shift, and go to state 25
    '+'  shift, and go to state 26
    '-'  shift, and go to state 27

    $default  reduce using rule 26 (ARITH1)

    ARITH1  go to state 53


State 42

   23 ARITH1: • '+' TERM ARITH1
   24       | • '-' TERM ARITH1
   24       | '-' TERM • ARITH1
   25       | • OR TERM ARITH1
   26       | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, ']', '}', ')']

    OR   shift, and go to state 25
    '+'  shift, and go to state 26
    '-'  shift, and go to state 27

    $default  reduce using rule 26 (ARITH1)

    ARITH1  go to state 54


State 43

   34 TERM1: • '*' FACTOR TERM1
   35      | • AND FACTOR TERM1
   35      | AND FACTOR • TERM1
   36      | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, OR, ']', '}', ')', '+', '-']

    AND  shift, and go to state 29
    '*'  shift, and go to state 30

    $default  reduce using rule 36 (TERM1)

    TERM1  go to state 55


State 44

   34 TERM1: • '*' FACTOR TERM1
   34      | '*' FACTOR • TERM1
   35      | • AND FACTOR TERM1
   36      | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, OR, ']', '}', ')', '+', '-']

    AND  shift, and go to state 29
    '*'  shift, and go to state 30

    $default  reduce using rule 36 (TERM1)

    TERM1  go to state 56


State 45

    9 FUNCTION: '{' ID • BODY '}'
   10 BODY: • STATEMENT BODY
   11     | • STATEMENT
   12 STATEMENT: • IFSTATEMENT
   13          | • WHILELOOP
   14          | • ID '=' EXPR
   15 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   16            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   17 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END

    ID     shift, and go to state 57
    IF     shift, and go to state 58
    WHILE  shift, and go to state 59

    BODY         go to state 60
    STATEMENT    go to state 61
    IFSTATEMENT  go to state 62
    WHILELOOP    go to state 63


State 46

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 • NEWLINE ENGINE

    NEWLINE  shift, and go to state 64


State 47

    7 FUNCTIONS: • FUNCTION NEWLINE FUNCTIONS
    7          | FUNCTION NEWLINE • FUNCTIONS
    8          | ε •  [SECTION3]
    9 FUNCTION: • '{' ID BODY '}'

    '{'  shift, and go to state 32

    $default  reduce using rule 8 (FUNCTIONS)

    FUNCTIONS  go to state 65
    FUNCTION   go to state 34


State 48

   20 EXPR: '[' CALL ID WITH • PARAM PARAMLIST ']'
   37 PARAM: • ID '=' EXPR

    ID  shift, and go to state 66

    PARAM  go to state 67


State 49

   19 EXPR: '[' CALL ID ']' •

    $default  reduce using rule 19 (EXPR)


State 50

   33 FACTOR: '(' NOT EXPR ')' •

    $default  reduce using rule 33 (FACTOR)


State 51

   32 FACTOR: '(' NEG EXPR ')' •

    $default  reduce using rule 32 (FACTOR)


State 52

   25 ARITH1: OR TERM ARITH1 •

    $default  reduce using rule 25 (ARITH1)


State 53

   23 ARITH1: '+' TERM ARITH1 •

    $default  reduce using rule 23 (ARITH1)


State 54

   24 ARITH1: '-' TERM ARITH1 •

    $default  reduce using rule 24 (ARITH1)


State 55

   35 TERM1: AND FACTOR TERM1 •

    $default  reduce using rule 35 (TERM1)


State 56

   34 TERM1: '*' FACTOR TERM1 •

    $default  reduce using rule 34 (TERM1)


State 57

   14 STATEMENT: ID • '=' EXPR

    '='  shift, and go to state 68


State 58

   15 IFSTATEMENT: IF • '(' EXPR ')' THEN STATEMENT END
   16            | IF • '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END

    '('  shift, and go to state 69


State 59

   17 WHILELOOP: WHILE • '(' EXPR ')' STATEMENT END

    '('  shift, and go to state 70


State 60

    9 FUNCTION: '{' ID BODY • '}'

    '}'  shift, and go to state 71


State 61

   10 BODY: • STATEMENT BODY
   10     | STATEMENT • BODY
   11     | • STATEMENT
   11     | STATEMENT •  ['}']
   12 STATEMENT: • IFSTATEMENT
   13          | • WHILELOOP
   14          | • ID '=' EXPR
   15 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   16            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   17 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END

    ID     shift, and go to state 57
    IF     shift, and go to state 58
    WHILE  shift, and go to state 59

    $default  reduce using rule 11 (BODY)

    BODY         go to state 72
    STATEMENT    go to state 61
    IFSTATEMENT  go to state 62
    WHILELOOP    go to state 63


State 62

   12 STATEMENT: IFSTATEMENT •

    $default  reduce using rule 12 (STATEMENT)


State 63

   13 STATEMENT: WHILELOOP •

    $default  reduce using rule 13 (STATEMENT)


State 64

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE • ENGINE
    4 ENGINE: • '[' PLAY ']'
    5       | • '[' PLAY WITH PARAM PARAMLIST ']'
    6       | ε •  [$end]

    '['  shift, and go to state 73

    $default  reduce using rule 6 (ENGINE)

    ENGINE  go to state 74


State 65

    7 FUNCTIONS: FUNCTION NEWLINE FUNCTIONS •

    $default  reduce using rule 7 (FUNCTIONS)


State 66

   37 PARAM: ID • '=' EXPR

    '='  shift, and go to state 75


State 67

   20 EXPR: '[' CALL ID WITH PARAM • PARAMLIST ']'
   37 PARAM: • ID '=' EXPR
   38 PARAMLIST: • PARAM PARAMLIST
   39          | ε •  [']']

    ID  shift, and go to state 66

    $default  reduce using rule 39 (PARAMLIST)

    PARAM      go to state 76
    PARAMLIST  go to state 77


State 68

   14 STATEMENT: ID '=' • EXPR
   18 EXPR: • ARITHLOGIC
   19     | • '[' CALL ID ']'
   20     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: • TERM ARITH1
   22 TERM: • FACTOR TERM1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '['     shift, and go to state 13
    '('     shift, and go to state 14

    EXPR        go to state 78
    ARITHLOGIC  go to state 16
    TERM        go to state 17
    FACTOR      go to state 18


State 69

   15 IFSTATEMENT: IF '(' • EXPR ')' THEN STATEMENT END
   16            | IF '(' • EXPR ')' THEN STATEMENT ELSE STATEMENT END
   18 EXPR: • ARITHLOGIC
   19     | • '[' CALL ID ']'
   20     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: • TERM ARITH1
   22 TERM: • FACTOR TERM1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '['     shift, and go to state 13
    '('     shift, and go to state 14

    EXPR        go to state 79
    ARITHLOGIC  go to state 16
    TERM        go to state 17
    FACTOR      go to state 18


State 70

   17 WHILELOOP: WHILE '(' • EXPR ')' STATEMENT END
   18 EXPR: • ARITHLOGIC
   19     | • '[' CALL ID ']'
   20     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: • TERM ARITH1
   22 TERM: • FACTOR TERM1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '['     shift, and go to state 13
    '('     shift, and go to state 14

    EXPR        go to state 80
    ARITHLOGIC  go to state 16
    TERM        go to state 17
    FACTOR      go to state 18


State 71

    9 FUNCTION: '{' ID BODY '}' •

    $default  reduce using rule 9 (FUNCTION)


State 72

   10 BODY: STATEMENT BODY •

    $default  reduce using rule 10 (BODY)


State 73

    4 ENGINE: '[' • PLAY ']'
    5       | '[' • PLAY WITH PARAM PARAMLIST ']'

    PLAY  shift, and go to state 81


State 74

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE •

    $default  reduce using rule 1 (START)


State 75

   18 EXPR: • ARITHLOGIC
   19     | • '[' CALL ID ']'
   20     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   21 ARITHLOGIC: • TERM ARITH1
   22 TERM: • FACTOR TERM1
   27 FACTOR: • ID
   28       | • STRING
   29       | • TUPLE
   30       | • NUM
   31       | • '(' EXPR ')'
   32       | • '(' NEG EXPR ')'
   33       | • '(' NOT EXPR ')'
   37 PARAM: ID '=' • EXPR

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    TUPLE   shift, and go to state 12
    '['     shift, and go to state 13
    '('     shift, and go to state 14

    EXPR        go to state 82
    ARITHLOGIC  go to state 16
    TERM        go to state 17
    FACTOR      go to state 18


State 76

   37 PARAM: • ID '=' EXPR
   38 PARAMLIST: • PARAM PARAMLIST
   38          | PARAM • PARAMLIST
   39          | ε •  [']']

    ID  shift, and go to state 66

    $default  reduce using rule 39 (PARAMLIST)

    PARAM      go to state 76
    PARAMLIST  go to state 83


State 77

   20 EXPR: '[' CALL ID WITH PARAM PARAMLIST • ']'

    ']'  shift, and go to state 84


State 78

   14 STATEMENT: ID '=' EXPR •

    $default  reduce using rule 14 (STATEMENT)


State 79

   15 IFSTATEMENT: IF '(' EXPR • ')' THEN STATEMENT END
   16            | IF '(' EXPR • ')' THEN STATEMENT ELSE STATEMENT END

    ')'  shift, and go to state 85


State 80

   17 WHILELOOP: WHILE '(' EXPR • ')' STATEMENT END

    ')'  shift, and go to state 86


State 81

    4 ENGINE: '[' PLAY • ']'
    5       | '[' PLAY • WITH PARAM PARAMLIST ']'

    WITH  shift, and go to state 87
    ']'   shift, and go to state 88


State 82

   37 PARAM: ID '=' EXPR •

    $default  reduce using rule 37 (PARAM)


State 83

   38 PARAMLIST: PARAM PARAMLIST •

    $default  reduce using rule 38 (PARAMLIST)


State 84

   20 EXPR: '[' CALL ID WITH PARAM PARAMLIST ']' •

    $default  reduce using rule 20 (EXPR)


State 85

   15 IFSTATEMENT: IF '(' EXPR ')' • THEN STATEMENT END
   16            | IF '(' EXPR ')' • THEN STATEMENT ELSE STATEMENT END

    THEN  shift, and go to state 89


State 86

   12 STATEMENT: • IFSTATEMENT
   13          | • WHILELOOP
   14          | • ID '=' EXPR
   15 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   16            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   17 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END
   17          | WHILE '(' EXPR ')' • STATEMENT END

    ID     shift, and go to state 57
    IF     shift, and go to state 58
    WHILE  shift, and go to state 59

    STATEMENT    go to state 90
    IFSTATEMENT  go to state 62
    WHILELOOP    go to state 63


State 87

    5 ENGINE: '[' PLAY WITH • PARAM PARAMLIST ']'
   37 PARAM: • ID '=' EXPR

    ID  shift, and go to state 66

    PARAM  go to state 91


State 88

    4 ENGINE: '[' PLAY ']' •

    $default  reduce using rule 4 (ENGINE)


State 89

   12 STATEMENT: • IFSTATEMENT
   13          | • WHILELOOP
   14          | • ID '=' EXPR
   15 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   15            | IF '(' EXPR ')' THEN • STATEMENT END
   16            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   16            | IF '(' EXPR ')' THEN • STATEMENT ELSE STATEMENT END
   17 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END

    ID     shift, and go to state 57
    IF     shift, and go to state 58
    WHILE  shift, and go to state 59

    STATEMENT    go to state 92
    IFSTATEMENT  go to state 62
    WHILELOOP    go to state 63


State 90

   17 WHILELOOP: WHILE '(' EXPR ')' STATEMENT • END

    END  shift, and go to state 93


State 91

    5 ENGINE: '[' PLAY WITH PARAM • PARAMLIST ']'
   37 PARAM: • ID '=' EXPR
   38 PARAMLIST: • PARAM PARAMLIST
   39          | ε •  [']']

    ID  shift, and go to state 66

    $default  reduce using rule 39 (PARAMLIST)

    PARAM      go to state 76
    PARAMLIST  go to state 94


State 92

   15 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT • END
   16            | IF '(' EXPR ')' THEN STATEMENT • ELSE STATEMENT END

    ELSE  shift, and go to state 95
    END   shift, and go to state 96


State 93

   17 WHILELOOP: WHILE '(' EXPR ')' STATEMENT END •

    $default  reduce using rule 17 (WHILELOOP)


State 94

    5 ENGINE: '[' PLAY WITH PARAM PARAMLIST • ']'

    ']'  shift, and go to state 97


State 95

   12 STATEMENT: • IFSTATEMENT
   13          | • WHILELOOP
   14          | • ID '=' EXPR
   15 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   16            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   16            | IF '(' EXPR ')' THEN STATEMENT ELSE • STATEMENT END
   17 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END

    ID     shift, and go to state 57
    IF     shift, and go to state 58
    WHILE  shift, and go to state 59

    STATEMENT    go to state 98
    IFSTATEMENT  go to state 62
    WHILELOOP    go to state 63


State 96

   15 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT END •

    $default  reduce using rule 15 (IFSTATEMENT)


State 97

    5 ENGINE: '[' PLAY WITH PARAM PARAMLIST ']' •

    $default  reduce using rule 5 (ENGINE)


State 98

   16 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT • END

    END  shift, and go to state 99


State 99

   16 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END •

    $default  reduce using rule 16 (IFSTATEMENT)
