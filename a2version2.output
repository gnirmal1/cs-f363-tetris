Grammar

    0 $accept: START $end

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    2 PRIMITIVE: ID '=' EXPR NEWLINE PRIMITIVE
    3          | ε

    4 ENGINE: '[' PLAY ']'
    5       | '[' PLAY WITH PARAM PARAMLIST ']'

    6 FUNCTIONS: FUNCTION NEWLINE FUNCTIONS
    7          | ε

    8 FUNCTION: '{' ID BODY '}'

    9 BODY: STATEMENT BODY
   10     | STATEMENT

   11 STATEMENT: IFSTATEMENT
   12          | WHILELOOP
   13          | ID '=' EXPR

   14 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT END
   15            | IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END

   16 WHILELOOP: WHILE '(' EXPR ')' STATEMENT END

   17 EXPR: ARITHLOGIC
   18     | '[' CALL ID ']'
   19     | '[' CALL ID WITH PARAM PARAMLIST ']'

   20 ARITHLOGIC: TERM ARITH1

   21 TERM: FACTOR TERM1

   22 ARITH1: '+' TERM ARITH1
   23       | '-' TERM ARITH1
   24       | OR TERM ARITH1
   25       | ε

   26 FACTOR: ID
   27       | STRING
   28       | NUM
   29       | '(' EXPR ')'
   30       | '(' NEG EXPR ')'
   31       | '(' NOT EXPR ')'

   32 TERM1: '*' FACTOR TERM1
   33      | AND FACTOR TERM1
   34      | ε

   35 PARAM: ID '=' EXPR

   36 PARAMLIST: PARAM PARAMLIST
   37          | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 14 15 16 29 30 31
    ')' (41) 14 15 16 29 30 31
    '*' (42) 32
    '+' (43) 22
    '-' (45) 23
    '=' (61) 2 13 35
    '[' (91) 4 5 18 19
    ']' (93) 4 5 18 19
    '{' (123) 8
    '}' (125) 8
    error (256)
    ID <symbol> (258) 2 8 13 18 19 26 35
    NUM <symbol> (259) 28
    STRING <symbol> (260) 27
    SECTION1 (261) 1
    SECTION2 (262) 1
    SECTION3 (263) 1
    NEWLINE (264) 1 2 6
    IF (265) 14 15
    THEN (266) 14 15
    ELSE (267) 15
    END (268) 14 15 16
    WHILE (269) 16
    CALL (270) 18 19
    WITH (271) 5 19
    OR (272) 24
    AND (273) 33
    NOT (274) 31
    NEG (275) 30
    PLAY (276) 4 5


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    START <id> (33)
        on left: 1
        on right: 0
    PRIMITIVE <id> (34)
        on left: 2 3
        on right: 1 2
    ENGINE <id> (35)
        on left: 4 5
        on right: 1
    FUNCTIONS <id> (36)
        on left: 6 7
        on right: 1 6
    FUNCTION <id> (37)
        on left: 8
        on right: 6
    BODY <id> (38)
        on left: 9 10
        on right: 8 9
    STATEMENT <id> (39)
        on left: 11 12 13
        on right: 9 10 14 15 16
    IFSTATEMENT <id> (40)
        on left: 14 15
        on right: 11
    WHILELOOP <id> (41)
        on left: 16
        on right: 12
    EXPR <id> (42)
        on left: 17 18 19
        on right: 2 13 14 15 16 29 30 31 35
    ARITHLOGIC <id> (43)
        on left: 20
        on right: 17
    TERM <id> (44)
        on left: 21
        on right: 20 22 23 24
    ARITH1 <id> (45)
        on left: 22 23 24 25
        on right: 20 22 23 24
    FACTOR <id> (46)
        on left: 26 27 28 29 30 31
        on right: 21 32 33
    TERM1 <id> (47)
        on left: 32 33 34
        on right: 21 32 33
    PARAM <id> (48)
        on left: 35
        on right: 5 19 36
    PARAMLIST <id> (49)
        on left: 36 37
        on right: 5 19 36


State 0

    0 $accept: • START $end
    1 START: • SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    SECTION1  shift, and go to state 1

    START  go to state 2


State 1

    1 START: SECTION1 • NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    NEWLINE  shift, and go to state 3


State 2

    0 $accept: START • $end

    $end  shift, and go to state 4


State 3

    1 START: SECTION1 NEWLINE • PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE
    2 PRIMITIVE: • ID '=' EXPR NEWLINE PRIMITIVE
    3          | ε •  [SECTION2]

    ID  shift, and go to state 5

    $default  reduce using rule 3 (PRIMITIVE)

    PRIMITIVE  go to state 6


State 4

    0 $accept: START $end •

    $default  accept


State 5

    2 PRIMITIVE: ID • '=' EXPR NEWLINE PRIMITIVE

    '='  shift, and go to state 7


State 6

    1 START: SECTION1 NEWLINE PRIMITIVE • SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    SECTION2  shift, and go to state 8


State 7

    2 PRIMITIVE: ID '=' • EXPR NEWLINE PRIMITIVE
   17 EXPR: • ARITHLOGIC
   18     | • '[' CALL ID ']'
   19     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   20 ARITHLOGIC: • TERM ARITH1
   21 TERM: • FACTOR TERM1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '['     shift, and go to state 12
    '('     shift, and go to state 13

    EXPR        go to state 14
    ARITHLOGIC  go to state 15
    TERM        go to state 16
    FACTOR      go to state 17


State 8

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 • NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE

    NEWLINE  shift, and go to state 18


State 9

   26 FACTOR: ID •

    $default  reduce using rule 26 (FACTOR)


State 10

   28 FACTOR: NUM •

    $default  reduce using rule 28 (FACTOR)


State 11

   27 FACTOR: STRING •

    $default  reduce using rule 27 (FACTOR)


State 12

   18 EXPR: '[' • CALL ID ']'
   19     | '[' • CALL ID WITH PARAM PARAMLIST ']'

    CALL  shift, and go to state 19


State 13

   17 EXPR: • ARITHLOGIC
   18     | • '[' CALL ID ']'
   19     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   20 ARITHLOGIC: • TERM ARITH1
   21 TERM: • FACTOR TERM1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   29       | '(' • EXPR ')'
   30       | • '(' NEG EXPR ')'
   30       | '(' • NEG EXPR ')'
   31       | • '(' NOT EXPR ')'
   31       | '(' • NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    NOT     shift, and go to state 20
    NEG     shift, and go to state 21
    '['     shift, and go to state 12
    '('     shift, and go to state 13

    EXPR        go to state 22
    ARITHLOGIC  go to state 15
    TERM        go to state 16
    FACTOR      go to state 17


State 14

    2 PRIMITIVE: ID '=' EXPR • NEWLINE PRIMITIVE

    NEWLINE  shift, and go to state 23


State 15

   17 EXPR: ARITHLOGIC •

    $default  reduce using rule 17 (EXPR)


State 16

   20 ARITHLOGIC: TERM • ARITH1
   22 ARITH1: • '+' TERM ARITH1
   23       | • '-' TERM ARITH1
   24       | • OR TERM ARITH1
   25       | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, ']', '}', ')']

    OR   shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    $default  reduce using rule 25 (ARITH1)

    ARITH1  go to state 27


State 17

   21 TERM: FACTOR • TERM1
   32 TERM1: • '*' FACTOR TERM1
   33      | • AND FACTOR TERM1
   34      | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, OR, ']', '}', ')', '+', '-']

    AND  shift, and go to state 28
    '*'  shift, and go to state 29

    $default  reduce using rule 34 (TERM1)

    TERM1  go to state 30


State 18

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE • FUNCTIONS SECTION3 NEWLINE ENGINE
    6 FUNCTIONS: • FUNCTION NEWLINE FUNCTIONS
    7          | ε •  [SECTION3]
    8 FUNCTION: • '{' ID BODY '}'

    '{'  shift, and go to state 31

    $default  reduce using rule 7 (FUNCTIONS)

    FUNCTIONS  go to state 32
    FUNCTION   go to state 33


State 19

   18 EXPR: '[' CALL • ID ']'
   19     | '[' CALL • ID WITH PARAM PARAMLIST ']'

    ID  shift, and go to state 34


State 20

   17 EXPR: • ARITHLOGIC
   18     | • '[' CALL ID ']'
   19     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   20 ARITHLOGIC: • TERM ARITH1
   21 TERM: • FACTOR TERM1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'
   31       | '(' NOT • EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '['     shift, and go to state 12
    '('     shift, and go to state 13

    EXPR        go to state 35
    ARITHLOGIC  go to state 15
    TERM        go to state 16
    FACTOR      go to state 17


State 21

   17 EXPR: • ARITHLOGIC
   18     | • '[' CALL ID ']'
   19     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   20 ARITHLOGIC: • TERM ARITH1
   21 TERM: • FACTOR TERM1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   30       | '(' NEG • EXPR ')'
   31       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '['     shift, and go to state 12
    '('     shift, and go to state 13

    EXPR        go to state 36
    ARITHLOGIC  go to state 15
    TERM        go to state 16
    FACTOR      go to state 17


State 22

   29 FACTOR: '(' EXPR • ')'

    ')'  shift, and go to state 37


State 23

    2 PRIMITIVE: • ID '=' EXPR NEWLINE PRIMITIVE
    2          | ID '=' EXPR NEWLINE • PRIMITIVE
    3          | ε •  [SECTION2]

    ID  shift, and go to state 5

    $default  reduce using rule 3 (PRIMITIVE)

    PRIMITIVE  go to state 38


State 24

   21 TERM: • FACTOR TERM1
   24 ARITH1: OR • TERM ARITH1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '('     shift, and go to state 13

    TERM    go to state 39
    FACTOR  go to state 17


State 25

   21 TERM: • FACTOR TERM1
   22 ARITH1: '+' • TERM ARITH1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '('     shift, and go to state 13

    TERM    go to state 40
    FACTOR  go to state 17


State 26

   21 TERM: • FACTOR TERM1
   23 ARITH1: '-' • TERM ARITH1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '('     shift, and go to state 13

    TERM    go to state 41
    FACTOR  go to state 17


State 27

   20 ARITHLOGIC: TERM ARITH1 •

    $default  reduce using rule 20 (ARITHLOGIC)


State 28

   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'
   33 TERM1: AND • FACTOR TERM1

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '('     shift, and go to state 13

    FACTOR  go to state 42


State 29

   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'
   32 TERM1: '*' • FACTOR TERM1

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '('     shift, and go to state 13

    FACTOR  go to state 43


State 30

   21 TERM: FACTOR TERM1 •

    $default  reduce using rule 21 (TERM)


State 31

    8 FUNCTION: '{' • ID BODY '}'

    ID  shift, and go to state 44


State 32

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS • SECTION3 NEWLINE ENGINE

    SECTION3  shift, and go to state 45


State 33

    6 FUNCTIONS: FUNCTION • NEWLINE FUNCTIONS

    NEWLINE  shift, and go to state 46


State 34

   18 EXPR: '[' CALL ID • ']'
   19     | '[' CALL ID • WITH PARAM PARAMLIST ']'

    WITH  shift, and go to state 47
    ']'   shift, and go to state 48


State 35

   31 FACTOR: '(' NOT EXPR • ')'

    ')'  shift, and go to state 49


State 36

   30 FACTOR: '(' NEG EXPR • ')'

    ')'  shift, and go to state 50


State 37

   29 FACTOR: '(' EXPR ')' •

    $default  reduce using rule 29 (FACTOR)


State 38

    2 PRIMITIVE: ID '=' EXPR NEWLINE PRIMITIVE •

    $default  reduce using rule 2 (PRIMITIVE)


State 39

   22 ARITH1: • '+' TERM ARITH1
   23       | • '-' TERM ARITH1
   24       | • OR TERM ARITH1
   24       | OR TERM • ARITH1
   25       | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, ']', '}', ')']

    OR   shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    $default  reduce using rule 25 (ARITH1)

    ARITH1  go to state 51


State 40

   22 ARITH1: • '+' TERM ARITH1
   22       | '+' TERM • ARITH1
   23       | • '-' TERM ARITH1
   24       | • OR TERM ARITH1
   25       | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, ']', '}', ')']

    OR   shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    $default  reduce using rule 25 (ARITH1)

    ARITH1  go to state 52


State 41

   22 ARITH1: • '+' TERM ARITH1
   23       | • '-' TERM ARITH1
   23       | '-' TERM • ARITH1
   24       | • OR TERM ARITH1
   25       | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, ']', '}', ')']

    OR   shift, and go to state 24
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    $default  reduce using rule 25 (ARITH1)

    ARITH1  go to state 53


State 42

   32 TERM1: • '*' FACTOR TERM1
   33      | • AND FACTOR TERM1
   33      | AND FACTOR • TERM1
   34      | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, OR, ']', '}', ')', '+', '-']

    AND  shift, and go to state 28
    '*'  shift, and go to state 29

    $default  reduce using rule 34 (TERM1)

    TERM1  go to state 54


State 43

   32 TERM1: • '*' FACTOR TERM1
   32      | '*' FACTOR • TERM1
   33      | • AND FACTOR TERM1
   34      | ε •  [ID, NEWLINE, IF, ELSE, END, WHILE, OR, ']', '}', ')', '+', '-']

    AND  shift, and go to state 28
    '*'  shift, and go to state 29

    $default  reduce using rule 34 (TERM1)

    TERM1  go to state 55


State 44

    8 FUNCTION: '{' ID • BODY '}'
    9 BODY: • STATEMENT BODY
   10     | • STATEMENT
   11 STATEMENT: • IFSTATEMENT
   12          | • WHILELOOP
   13          | • ID '=' EXPR
   14 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   15            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   16 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END

    ID     shift, and go to state 56
    IF     shift, and go to state 57
    WHILE  shift, and go to state 58

    BODY         go to state 59
    STATEMENT    go to state 60
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 45

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 • NEWLINE ENGINE

    NEWLINE  shift, and go to state 63


State 46

    6 FUNCTIONS: • FUNCTION NEWLINE FUNCTIONS
    6          | FUNCTION NEWLINE • FUNCTIONS
    7          | ε •  [SECTION3]
    8 FUNCTION: • '{' ID BODY '}'

    '{'  shift, and go to state 31

    $default  reduce using rule 7 (FUNCTIONS)

    FUNCTIONS  go to state 64
    FUNCTION   go to state 33


State 47

   19 EXPR: '[' CALL ID WITH • PARAM PARAMLIST ']'
   35 PARAM: • ID '=' EXPR

    ID  shift, and go to state 65

    PARAM  go to state 66


State 48

   18 EXPR: '[' CALL ID ']' •

    $default  reduce using rule 18 (EXPR)


State 49

   31 FACTOR: '(' NOT EXPR ')' •

    $default  reduce using rule 31 (FACTOR)


State 50

   30 FACTOR: '(' NEG EXPR ')' •

    $default  reduce using rule 30 (FACTOR)


State 51

   24 ARITH1: OR TERM ARITH1 •

    $default  reduce using rule 24 (ARITH1)


State 52

   22 ARITH1: '+' TERM ARITH1 •

    $default  reduce using rule 22 (ARITH1)


State 53

   23 ARITH1: '-' TERM ARITH1 •

    $default  reduce using rule 23 (ARITH1)


State 54

   33 TERM1: AND FACTOR TERM1 •

    $default  reduce using rule 33 (TERM1)


State 55

   32 TERM1: '*' FACTOR TERM1 •

    $default  reduce using rule 32 (TERM1)


State 56

   13 STATEMENT: ID • '=' EXPR

    '='  shift, and go to state 67


State 57

   14 IFSTATEMENT: IF • '(' EXPR ')' THEN STATEMENT END
   15            | IF • '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END

    '('  shift, and go to state 68


State 58

   16 WHILELOOP: WHILE • '(' EXPR ')' STATEMENT END

    '('  shift, and go to state 69


State 59

    8 FUNCTION: '{' ID BODY • '}'

    '}'  shift, and go to state 70


State 60

    9 BODY: • STATEMENT BODY
    9     | STATEMENT • BODY
   10     | • STATEMENT
   10     | STATEMENT •  ['}']
   11 STATEMENT: • IFSTATEMENT
   12          | • WHILELOOP
   13          | • ID '=' EXPR
   14 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   15            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   16 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END

    ID     shift, and go to state 56
    IF     shift, and go to state 57
    WHILE  shift, and go to state 58

    $default  reduce using rule 10 (BODY)

    BODY         go to state 71
    STATEMENT    go to state 60
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 61

   11 STATEMENT: IFSTATEMENT •

    $default  reduce using rule 11 (STATEMENT)


State 62

   12 STATEMENT: WHILELOOP •

    $default  reduce using rule 12 (STATEMENT)


State 63

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE • ENGINE
    4 ENGINE: • '[' PLAY ']'
    5       | • '[' PLAY WITH PARAM PARAMLIST ']'

    '['  shift, and go to state 72

    ENGINE  go to state 73


State 64

    6 FUNCTIONS: FUNCTION NEWLINE FUNCTIONS •

    $default  reduce using rule 6 (FUNCTIONS)


State 65

   35 PARAM: ID • '=' EXPR

    '='  shift, and go to state 74


State 66

   19 EXPR: '[' CALL ID WITH PARAM • PARAMLIST ']'
   35 PARAM: • ID '=' EXPR
   36 PARAMLIST: • PARAM PARAMLIST
   37          | ε •  [']']

    ID  shift, and go to state 65

    $default  reduce using rule 37 (PARAMLIST)

    PARAM      go to state 75
    PARAMLIST  go to state 76


State 67

   13 STATEMENT: ID '=' • EXPR
   17 EXPR: • ARITHLOGIC
   18     | • '[' CALL ID ']'
   19     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   20 ARITHLOGIC: • TERM ARITH1
   21 TERM: • FACTOR TERM1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '['     shift, and go to state 12
    '('     shift, and go to state 13

    EXPR        go to state 77
    ARITHLOGIC  go to state 15
    TERM        go to state 16
    FACTOR      go to state 17


State 68

   14 IFSTATEMENT: IF '(' • EXPR ')' THEN STATEMENT END
   15            | IF '(' • EXPR ')' THEN STATEMENT ELSE STATEMENT END
   17 EXPR: • ARITHLOGIC
   18     | • '[' CALL ID ']'
   19     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   20 ARITHLOGIC: • TERM ARITH1
   21 TERM: • FACTOR TERM1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '['     shift, and go to state 12
    '('     shift, and go to state 13

    EXPR        go to state 78
    ARITHLOGIC  go to state 15
    TERM        go to state 16
    FACTOR      go to state 17


State 69

   16 WHILELOOP: WHILE '(' • EXPR ')' STATEMENT END
   17 EXPR: • ARITHLOGIC
   18     | • '[' CALL ID ']'
   19     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   20 ARITHLOGIC: • TERM ARITH1
   21 TERM: • FACTOR TERM1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '['     shift, and go to state 12
    '('     shift, and go to state 13

    EXPR        go to state 79
    ARITHLOGIC  go to state 15
    TERM        go to state 16
    FACTOR      go to state 17


State 70

    8 FUNCTION: '{' ID BODY '}' •

    $default  reduce using rule 8 (FUNCTION)


State 71

    9 BODY: STATEMENT BODY •

    $default  reduce using rule 9 (BODY)


State 72

    4 ENGINE: '[' • PLAY ']'
    5       | '[' • PLAY WITH PARAM PARAMLIST ']'

    PLAY  shift, and go to state 80


State 73

    1 START: SECTION1 NEWLINE PRIMITIVE SECTION2 NEWLINE FUNCTIONS SECTION3 NEWLINE ENGINE •

    $default  reduce using rule 1 (START)


State 74

   17 EXPR: • ARITHLOGIC
   18     | • '[' CALL ID ']'
   19     | • '[' CALL ID WITH PARAM PARAMLIST ']'
   20 ARITHLOGIC: • TERM ARITH1
   21 TERM: • FACTOR TERM1
   26 FACTOR: • ID
   27       | • STRING
   28       | • NUM
   29       | • '(' EXPR ')'
   30       | • '(' NEG EXPR ')'
   31       | • '(' NOT EXPR ')'
   35 PARAM: ID '=' • EXPR

    ID      shift, and go to state 9
    NUM     shift, and go to state 10
    STRING  shift, and go to state 11
    '['     shift, and go to state 12
    '('     shift, and go to state 13

    EXPR        go to state 81
    ARITHLOGIC  go to state 15
    TERM        go to state 16
    FACTOR      go to state 17


State 75

   35 PARAM: • ID '=' EXPR
   36 PARAMLIST: • PARAM PARAMLIST
   36          | PARAM • PARAMLIST
   37          | ε •  [']']

    ID  shift, and go to state 65

    $default  reduce using rule 37 (PARAMLIST)

    PARAM      go to state 75
    PARAMLIST  go to state 82


State 76

   19 EXPR: '[' CALL ID WITH PARAM PARAMLIST • ']'

    ']'  shift, and go to state 83


State 77

   13 STATEMENT: ID '=' EXPR •

    $default  reduce using rule 13 (STATEMENT)


State 78

   14 IFSTATEMENT: IF '(' EXPR • ')' THEN STATEMENT END
   15            | IF '(' EXPR • ')' THEN STATEMENT ELSE STATEMENT END

    ')'  shift, and go to state 84


State 79

   16 WHILELOOP: WHILE '(' EXPR • ')' STATEMENT END

    ')'  shift, and go to state 85


State 80

    4 ENGINE: '[' PLAY • ']'
    5       | '[' PLAY • WITH PARAM PARAMLIST ']'

    WITH  shift, and go to state 86
    ']'   shift, and go to state 87


State 81

   35 PARAM: ID '=' EXPR •

    $default  reduce using rule 35 (PARAM)


State 82

   36 PARAMLIST: PARAM PARAMLIST •

    $default  reduce using rule 36 (PARAMLIST)


State 83

   19 EXPR: '[' CALL ID WITH PARAM PARAMLIST ']' •

    $default  reduce using rule 19 (EXPR)


State 84

   14 IFSTATEMENT: IF '(' EXPR ')' • THEN STATEMENT END
   15            | IF '(' EXPR ')' • THEN STATEMENT ELSE STATEMENT END

    THEN  shift, and go to state 88


State 85

   11 STATEMENT: • IFSTATEMENT
   12          | • WHILELOOP
   13          | • ID '=' EXPR
   14 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   15            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   16 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END
   16          | WHILE '(' EXPR ')' • STATEMENT END

    ID     shift, and go to state 56
    IF     shift, and go to state 57
    WHILE  shift, and go to state 58

    STATEMENT    go to state 89
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 86

    5 ENGINE: '[' PLAY WITH • PARAM PARAMLIST ']'
   35 PARAM: • ID '=' EXPR

    ID  shift, and go to state 65

    PARAM  go to state 90


State 87

    4 ENGINE: '[' PLAY ']' •

    $default  reduce using rule 4 (ENGINE)


State 88

   11 STATEMENT: • IFSTATEMENT
   12          | • WHILELOOP
   13          | • ID '=' EXPR
   14 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   14            | IF '(' EXPR ')' THEN • STATEMENT END
   15            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   15            | IF '(' EXPR ')' THEN • STATEMENT ELSE STATEMENT END
   16 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END

    ID     shift, and go to state 56
    IF     shift, and go to state 57
    WHILE  shift, and go to state 58

    STATEMENT    go to state 91
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 89

   16 WHILELOOP: WHILE '(' EXPR ')' STATEMENT • END

    END  shift, and go to state 92


State 90

    5 ENGINE: '[' PLAY WITH PARAM • PARAMLIST ']'
   35 PARAM: • ID '=' EXPR
   36 PARAMLIST: • PARAM PARAMLIST
   37          | ε •  [']']

    ID  shift, and go to state 65

    $default  reduce using rule 37 (PARAMLIST)

    PARAM      go to state 75
    PARAMLIST  go to state 93


State 91

   14 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT • END
   15            | IF '(' EXPR ')' THEN STATEMENT • ELSE STATEMENT END

    ELSE  shift, and go to state 94
    END   shift, and go to state 95


State 92

   16 WHILELOOP: WHILE '(' EXPR ')' STATEMENT END •

    $default  reduce using rule 16 (WHILELOOP)


State 93

    5 ENGINE: '[' PLAY WITH PARAM PARAMLIST • ']'

    ']'  shift, and go to state 96


State 94

   11 STATEMENT: • IFSTATEMENT
   12          | • WHILELOOP
   13          | • ID '=' EXPR
   14 IFSTATEMENT: • IF '(' EXPR ')' THEN STATEMENT END
   15            | • IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END
   15            | IF '(' EXPR ')' THEN STATEMENT ELSE • STATEMENT END
   16 WHILELOOP: • WHILE '(' EXPR ')' STATEMENT END

    ID     shift, and go to state 56
    IF     shift, and go to state 57
    WHILE  shift, and go to state 58

    STATEMENT    go to state 97
    IFSTATEMENT  go to state 61
    WHILELOOP    go to state 62


State 95

   14 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT END •

    $default  reduce using rule 14 (IFSTATEMENT)


State 96

    5 ENGINE: '[' PLAY WITH PARAM PARAMLIST ']' •

    $default  reduce using rule 5 (ENGINE)


State 97

   15 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT • END

    END  shift, and go to state 98


State 98

   15 IFSTATEMENT: IF '(' EXPR ')' THEN STATEMENT ELSE STATEMENT END •

    $default  reduce using rule 15 (IFSTATEMENT)
